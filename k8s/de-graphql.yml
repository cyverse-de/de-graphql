apiVersion: apps/v1
kind: Deployment
metadata:
  name: de-graphql
spec:
  replicas: 2
  selector:
    matchLabels:
      de-app: de-graphql
  template:
    metadata:
      labels:
        de-app: de-graphql
        app: de
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: de-app
                operator: In
                values:
                - de-graphql
            topologyKey: kubernetes.io/hostname
      restartPolicy: Always
      containers:
      - name: de-graphql
        image: discoenv/de-graphql
        env:
          - name: DE_DB_URL
            valueFrom:
              secretKeyRef:
                name: configs
                key: DE_DB_URL
          - name: METADATA_DB_URL
            valueFrom:
              secretKeyRef:
                name: configs
                key: METADATA_DB_URL
        resources:
          requests:
            cpu: "100m"
            memory: "1Gi"
          limits:
            cpu: "4000m"
            memory: "4Gi"
        ports:
          - name: listen-port
            containerPort: 4000
        livenessProbe:
          httpGet:
            path: /.well-known/apollo/server-health
            port: 4000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: /.well-known/apollo/server-health
            port: 4000
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 10
---
apiVersion: v1
kind: Service
metadata:
  name: de-graphql
spec:
  selector:
    de-app: de-graphql
  ports:
    - protocol: TCP
      port: 80
      targetPort: listen-port
